#!/usr/bin/env python3

import os
import sys
import tempfile
from pathlib import Path
from typing import Sequence, Any, List
from collections import defaultdict

import click

from seanb.jsonfast import loads, dumps


@click.command()
@click.option(
    "--check/--no-check",
    show_default=True,
    help="if compressing wouldn't change the size, dont write to the file",
    is_flag=True,
    default=True,
)
@click.argument(
    "PATH",
    nargs=-1,
    type=click.Path(allow_dash=True, exists=True, path_type=Path),
    required=True,
)
def main(check: bool, path: Sequence[Path]) -> None:
    """
    pass files to compress, or '-' from STDIN
    """
    data: Any
    print_sizes: bool = "-" not in {str(p) for p in path}
    sizes: dict[Path, List[int]] = defaultdict(list)
    for p in path:
        if str(p) == "-":
            data = sys.stdin.read()
        else:
            data = p.read_text()
            sizes[p].append(p.stat().st_size)
        data = loads(data)
        compressed: str = dumps(data, minified=True)
        if str(p) == "-":
            click.echo(compressed)
        else:
            if check:
                with tempfile.NamedTemporaryFile("w") as temp:
                    temp.write(compressed)
                    temp.flush()
                    tmp_size = os.stat(temp.name).st_size
                if tmp_size == sizes[p][0]:
                    click.echo(
                        f"json-compress: {p} size remained the same, skipping write",
                        err=True,
                    )
                    continue
            with open(p, "w") as f:
                f.write(compressed)
            sizes[p].append(p.stat().st_size)
            if print_sizes:
                before = sizes[p][0]
                after = sizes[p][1]
                diff = before - after
                if diff == 0:
                    click.echo(f"json-compress: {p} size remained the same", err=True)
                else:
                    click.echo(
                        f"json-compress: {p} reduced by {round(diff / before * 100, 4)}%",
                        err=True,
                    )


if __name__ == "__main__":
    main()
