#!/usr/bin/env bash

usage="Usage: mduration [-h] FILENAME...

gives you the duration of a audio/video file
prints a line like:
xxxs|xm:xs|filename
for each file
you can get a specific part of these by using cut:

mduration movie.mp4 | cut -d \"|\" -f 1
mduration movie.mp4 | cut -d \"|\" -f 2
mduration movie.mp4 | cut -d \"|\" -f 3"

if [[ "$1" == "-h" ]]; then
	echo "${usage}"
	exit 0
fi

if [[ -z "$1" ]]; then
	echo -e "Error: Must provide at least one file on command line.\n\n${usage}" 1>&2
	exit 1
fi

havecmd -V 'This is installed as part of ffmpeg' ffprobe || exit $?

for file in "$@"; do
	if [[ -f "${file}" ]]; then # ignore directories
		seconds=$(ffprobe -i "${file}" -show_entries format=duration -v quiet -of csv='p=0') || exit $?
		seconds=${seconds%.*} # remove decimals
		printf "%ds|" "${seconds}"
		minutes=$((seconds / 60))
		seconds=$((seconds % 60))
		if ((minutes > 60)); then
			hours=$((minutes / 60))
			minutes=$((minutes % 60))
			# print hours, minutes and seconds
			printf "%dh:%dm:%ds" "${hours}" "${minutes}" "${seconds}"
		else
			# print minutes and seconds
			printf "%dm:%ds" "${minutes}" "${seconds}"
		fi
		printf "|%s\n" "${file}"
	fi
done
